vdump of interesting "_listname" variables...

++ BASENAME='crypto'
++ BINARY_DIR='crypto64.Release'
++ BINARY_DIR_NAME='crypto64.Release'
++ BINARY_HLQ='/home/jake/sysgen/build/WORK/crypto'
++ BITNESS='64'
++ CHECK_INCLUDE_FILE_VAR='stddef.h'
++ CMAKE_16BIT_TYPE='unsigned short'
++ CMAKE_ADDR2LINE='/usr/bin/addr2line'
++ CMAKE_AR='/usr/bin/ar'
++ CMAKE_AR='/usr/bin/ar'
++ CMAKE_AUTOGEN_ORIGIN_DEPENDS='ON'
++ CMAKE_AUTOMOC_COMPILER_PREDEFINES='ON'
++ CMAKE_AUTOMOC_MACRO_NAMES='Q_OBJECT;Q_GADGET;Q_NAMESPACE'
++ CMAKE_AUTOMOC_PATH_PREFIX='ON'
++ CMAKE_BASE_NAME='gcc'
++ CMAKE_BINARY_DIR='/home/jake/sysgen/build/WORK/crypto/crypto64.Release'
++ CMAKE_BUILD_TOOL='/usr/bin/make'
++ CMAKE_BUILD_TYPE='RelWithDebInfo'
++ CMAKE_C11_COMPILE_FEATURES='c_std_11;c_static_assert'
++ CMAKE_C11_EXTENSION_COMPILE_OPTION='-std=gnu11'
++ CMAKE_C11_STANDARD_COMPILE_OPTION='-std=c11'
++ CMAKE_C11_STANDARD__HAS_FULL_SUPPORT='ON'
++ CMAKE_C90_COMPILE_FEATURES='c_std_90;c_function_prototypes'
++ CMAKE_C90_EXTENSION_COMPILE_OPTION='-std=gnu90'
++ CMAKE_C90_STANDARD_COMPILE_OPTION='-std=c90'
++ CMAKE_C90_STANDARD__HAS_FULL_SUPPORT='ON'
++ CMAKE_C99_COMPILE_FEATURES='c_std_99;c_restrict;c_variadic_macros'
++ CMAKE_C99_EXTENSION_COMPILE_OPTION='-std=gnu99'
++ CMAKE_C99_STANDARD_COMPILE_OPTION='-std=c99'
++ CMAKE_C99_STANDARD__HAS_FULL_SUPPORT='ON'
++ CMAKE_CFG_INTDIR='.'
++ CMAKE_COLOR_MAKEFILE='ON'
++ CMAKE_COMMAND='/usr/bin/cmake'
++ CMAKE_COMPILER_IS_GNUCC='1'
++ CMAKE_CPACK_COMMAND='/usr/bin/cpack'
++ CMAKE_CROSSCOMPILING='FALSE'
++ CMAKE_CTEST_COMMAND='/usr/bin/ctest'
++ CMAKE_CURRENT_BINARY_DIR='/home/jake/sysgen/build/WORK/crypto/crypto64.Release'
++ CMAKE_CURRENT_LIST_DIR='/home/jake/sysgen/build/crypto'
++ CMAKE_CURRENT_LIST_FILE='/home/jake/sysgen/build/crypto/CMakeLists.txt'
++ CMAKE_CURRENT_SOURCE_DIR='/home/jake/sysgen/build/crypto'
++ CMAKE_C_ABI_COMPILED='TRUE'
++ CMAKE_C_ARCHIVE_APPEND='<CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS>'
++ CMAKE_C_ARCHIVE_APPEND_IPO='"/usr/bin/gcc-ar-9" r <TARGET> <LINK_FLAGS> <OBJECTS>'
++ CMAKE_C_ARCHIVE_CREATE='<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>'
++ CMAKE_C_ARCHIVE_CREATE_IPO='"/usr/bin/gcc-ar-9" cr <TARGET> <LINK_FLAGS> <OBJECTS>'
++ CMAKE_C_ARCHIVE_FINISH='<CMAKE_RANLIB> <TARGET>'
++ CMAKE_C_ARCHIVE_FINISH_IPO='"/usr/bin/gcc-ranlib-9" <TARGET>'
++ CMAKE_C_CL_SHOWINCLUDES_PREFIX=''
++ CMAKE_C_COMPILER='/usr/bin/cc'
++ CMAKE_C_COMPILER='/usr/bin/cc'
++ CMAKE_C_COMPILER_ABI='ELF'
++ CMAKE_C_COMPILER_AR='/usr/bin/gcc-ar-9'
++ CMAKE_C_COMPILER_AR='/usr/bin/gcc-ar-9'
++ CMAKE_C_COMPILER_ARCHITECTURE_ID=''
++ CMAKE_C_COMPILER_ARG1=''
++ CMAKE_C_COMPILER_ENV_VAR='CC'
++ CMAKE_C_COMPILER_FRONTEND_VARIANT=''
++ CMAKE_C_COMPILER_ID='GNU'
++ CMAKE_C_COMPILER_ID_RUN='1'
++ CMAKE_C_COMPILER_ID_TEST_FLAGS='-c;-Aa;-D__CLASSIC_C__;--target=arm-arm-none-eabi -mcpu=cortex-m3'
++ CMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX='2'
++ CMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX='
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdC/(\./)?(CompilerIdC.(framework|xctest)/)?CompilerIdC[ 	
\"]'
++ CMAKE_C_COMPILER_ID_VENDORS='IAR'
++ CMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR='IAR .+ Compiler'
++ CMAKE_C_COMPILER_INIT='NOTFOUND'
++ CMAKE_C_COMPILER_LIST='cc;gcc;cl;bcc;xlc;clang'
++ CMAKE_C_COMPILER_LOADED='1'
++ CMAKE_C_COMPILER_NAMES='cc'
++ CMAKE_C_COMPILER_PREDEFINES_COMMAND='/usr/bin/cc;-dM;-E;-c;/usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp'
++ CMAKE_C_COMPILER_PRODUCED_FILES='a.out'
++ CMAKE_C_COMPILER_PRODUCED_OUTPUT=''
++ CMAKE_C_COMPILER_RANLIB='/usr/bin/gcc-ranlib-9'
++ CMAKE_C_COMPILER_RANLIB='/usr/bin/gcc-ranlib-9'
++ CMAKE_C_COMPILER_VERSION='9.3.0'
++ CMAKE_C_COMPILER_VERSION_INTERNAL=''
++ CMAKE_C_COMPILER_WORKS='TRUE'
++ CMAKE_C_COMPILER_WRAPPER=''
++ CMAKE_C_COMPILE_FEATURES='c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert'
++ CMAKE_C_COMPILE_OBJECT='<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE>'
++ CMAKE_C_COMPILE_OPTIONS_CREATE_PCH='-Winvalid-pch;-x;c-header;-include;<PCH_HEADER>'
++ CMAKE_C_COMPILE_OPTIONS_IPO='-flto;-fno-fat-lto-objects'
++ CMAKE_C_COMPILE_OPTIONS_PIC='-fPIC'
++ CMAKE_C_COMPILE_OPTIONS_PIE='-fPIE'
++ CMAKE_C_COMPILE_OPTIONS_SYSROOT='--sysroot='
++ CMAKE_C_COMPILE_OPTIONS_USE_PCH='-Winvalid-pch;-include;<PCH_HEADER>'
++ CMAKE_C_COMPILE_OPTIONS_VISIBILITY='-fvisibility='
++ CMAKE_C_CREATE_ASSEMBLY_SOURCE='<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>'
++ CMAKE_C_CREATE_PREPROCESSED_SOURCE='<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>'
++ CMAKE_C_CREATE_SHARED_LIBRARY='<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>'
++ CMAKE_C_CREATE_SHARED_MODULE='<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>'
++ CMAKE_C_FLAGS=''
++ CMAKE_C_FLAGS_DEBUG='-g           -D LITTLE_ENDIAN=1234 -D BIG_ENDIAN=4321 -D BYTE_ORDER=LITTLE_ENDIAN          -D HAVE_PLATFORM_H -D DEBUG          -D VERS_STRING=1.0.0.49-g837705e           -fPIC'
++ CMAKE_C_FLAGS_DEBUG='-g           -D LITTLE_ENDIAN=1234 -D BIG_ENDIAN=4321 -D BYTE_ORDER=LITTLE_ENDIAN          -D HAVE_PLATFORM_H -D DEBUG          -D VERS_STRING=1.0.0.49-g837705e           -fPIC'
++ CMAKE_C_FLAGS_DEBUG_INIT=' -g'
++ CMAKE_C_FLAGS_INIT='  '
++ CMAKE_C_FLAGS_MINSIZEREL='-Os -DNDEBUG'
++ CMAKE_C_FLAGS_MINSIZEREL_INIT=' -Os -DNDEBUG'
++ CMAKE_C_FLAGS_RELEASE='-O3 -DNDEBUG'
++ CMAKE_C_FLAGS_RELEASE_INIT=' -O3 -DNDEBUG'
++ CMAKE_C_FLAGS_RELWITHDEBINFO='-O2 -g -DNDEBUG  -D LITTLE_ENDIAN=1234 -D BIG_ENDIAN=4321 -D BYTE_ORDER=LITTLE_ENDIAN -D HAVE_PLATFORM_H -D VERS_STRING=1.0.0.49-g837705e  -fPIC'
++ CMAKE_C_FLAGS_RELWITHDEBINFO='-O2 -g -DNDEBUG  -D LITTLE_ENDIAN=1234 -D BIG_ENDIAN=4321 -D BYTE_ORDER=LITTLE_ENDIAN -D HAVE_PLATFORM_H -D VERS_STRING=1.0.0.49-g837705e  -fPIC'
++ CMAKE_C_FLAGS_RELWITHDEBINFO_INIT=' -O2 -g -DNDEBUG'
++ CMAKE_C_IGNORE_EXTENSIONS='h;H;o;O;obj;OBJ;def;DEF;rc;RC'
++ CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES='/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include'
++ CMAKE_C_IMPLICIT_LINK_DIRECTORIES='/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib'
++ CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES=''
++ CMAKE_C_IMPLICIT_LINK_LIBRARIES='gcc;gcc_s;c;gcc;gcc_s'
++ CMAKE_C_INFORMATION_LOADED='1'
++ CMAKE_C_LIBRARY_ARCHITECTURE='x86_64-linux-gnu'
++ CMAKE_C_LINKER_PREFERENCE='10'
++ CMAKE_C_LINKER_WRAPPER_FLAG='-Wl,'
++ CMAKE_C_LINKER_WRAPPER_FLAG_SEP=','
++ CMAKE_C_LINK_EXECUTABLE='<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>'
++ CMAKE_C_LINK_OPTIONS_NO_PIE='-no-pie'
++ CMAKE_C_LINK_OPTIONS_PIE='-fPIE;-pie'
++ CMAKE_C_OUTPUT_EXTENSION='.o'
++ CMAKE_C_PLATFORM_ID='Linux'
++ CMAKE_C_SIMULATE_ID=''
++ CMAKE_C_SIMULATE_VERSION=''
++ CMAKE_C_SIZEOF_DATA_PTR='8'
++ CMAKE_C_SOURCE_FILE_EXTENSIONS='c;m'
++ CMAKE_C_STANDARD_COMPUTED_DEFAULT='11'
++ CMAKE_C_STANDARD_DEFAULT='11'
++ CMAKE_C_VERBOSE_FLAG='-v'
++ CMAKE_C_XCODE_ARCHS=''
++ CMAKE_DEPFILE_FLAGS_C='-MD -MT <OBJECT> -MF <DEPFILE>'
++ CMAKE_DISABLE_IN_SOURCE_BUILD='ON'
++ CMAKE_DISABLE_SOURCE_CHANGES='ON'
++ CMAKE_DLLTOOL='CMAKE_DLLTOOL-NOTFOUND'
++ CMAKE_DL_LIBS='dl'
++ CMAKE_EFFECTIVE_SYSTEM_NAME='Linux'
++ CMAKE_EXECUTABLE_FORMAT='ELF'
++ CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG='-Wl,-rpath-link,'
++ CMAKE_EXECUTABLE_RUNTIME_C_FLAG='-Wl,-rpath,'
++ CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP=':'
++ CMAKE_EXECUTABLE_SUFFIX=''
++ CMAKE_EXE_EXPORTS_C_FLAG='-Wl,--export-dynamic'
++ CMAKE_EXE_LINKER_FLAGS=''
++ CMAKE_EXE_LINKER_FLAGS_DEBUG=''
++ CMAKE_EXE_LINKER_FLAGS_INIT=' '
++ CMAKE_EXE_LINKER_FLAGS_MINSIZEREL=''
++ CMAKE_EXE_LINKER_FLAGS_RELEASE=''
++ CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO=''
++ CMAKE_EXE_LINK_DYNAMIC_C_FLAGS='-Wl,-Bdynamic'
++ CMAKE_EXE_LINK_STATIC_C_FLAGS='-Wl,-Bstatic'
++ CMAKE_EXPORT_COMPILE_COMMANDS='OFF'
++ CMAKE_EXTRA_GENERATOR=''
++ CMAKE_FILES_DIRECTORY='/CMakeFiles'
++ CMAKE_FIND_LIBRARY_PREFIXES='lib'
++ CMAKE_FIND_LIBRARY_SUFFIXES='.so;.a'
++ CMAKE_GENERATOR='Unix Makefiles'
++ CMAKE_GENERATOR_INSTANCE=''
++ CMAKE_GENERATOR_PLATFORM=''
++ CMAKE_GENERATOR_TOOLSET=''
++ CMAKE_HOME_DIRECTORY='/home/jake/sysgen/build/crypto'
++ CMAKE_HOST_SYSTEM='Linux-5.8.0-63-generic'
++ CMAKE_HOST_SYSTEM_NAME='Linux'
++ CMAKE_HOST_SYSTEM_PROCESSOR='x86_64'
++ CMAKE_HOST_SYSTEM_VERSION='5.8.0-63-generic'
++ CMAKE_HOST_UNIX='1'
++ CMAKE_INCLUDE_FLAG_C='-I'
++ CMAKE_INCLUDE_SYSTEM_FLAG_C='-isystem '
++ CMAKE_INSTALL_DEFAULT_COMPONENT_NAME='Unspecified'
++ CMAKE_INSTALL_PREFIX='/home/jake/sysgen/build/hercpkgs'
++ CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT='1'
++ CMAKE_INSTALL_SO_NO_EXE='1'
++ CMAKE_INTERNAL_PLATFORM_ABI='ELF'
++ CMAKE_LIBRARY_ARCHITECTURE='x86_64-linux-gnu'
++ CMAKE_LIBRARY_ARCHITECTURE_REGEX='[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*'
++ CMAKE_LIBRARY_PATH_FLAG='-L'
++ CMAKE_LIBRARY_PATH_TERMINATOR=''
++ CMAKE_LINKER='/usr/bin/ld'
++ CMAKE_LINKER='/usr/bin/ld'
++ CMAKE_LINK_LIBRARY_FLAG='-l'
++ CMAKE_LINK_LIBRARY_SUFFIX=''
++ CMAKE_MAJOR_VERSION='3'
++ CMAKE_MAKE_PROGRAM='/usr/bin/make'
++ CMAKE_MATCH_0=''
++ CMAKE_MATCH_1=''
++ CMAKE_MATCH_COUNT='0'
++ CMAKE_MINIMUM_REQUIRED_VERSION='3.2'
++ CMAKE_MINOR_VERSION='16'
++ CMAKE_MODULE_LINKER_FLAGS=''
++ CMAKE_MODULE_LINKER_FLAGS_DEBUG=''
++ CMAKE_MODULE_LINKER_FLAGS_INIT=' '
++ CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL=''
++ CMAKE_MODULE_LINKER_FLAGS_RELEASE=''
++ CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO=''
++ CMAKE_MODULE_PATH='/home/jake/sysgen/build/crypto/cmake/modules'
++ CMAKE_MT=''
++ CMAKE_NM='/usr/bin/nm'
++ CMAKE_OBJCOPY='/usr/bin/objcopy'
++ CMAKE_OBJDUMP='/usr/bin/objdump'
++ CMAKE_PARENT_LIST_FILE='/home/jake/sysgen/build/crypto/CMakeLists.txt'
++ CMAKE_PATCH_VERSION='3'
++ CMAKE_PCH_EXTENSION='.gch'
++ CMAKE_PCH_PROLOGUE='#pragma GCC system_header'
++ CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES='/lib;/lib32;/lib64;/usr/lib;/usr/lib32;/usr/lib64'
++ CMAKE_PLATFORM_INFO_DIR='/home/jake/sysgen/build/WORK/crypto/crypto64.Release/CMakeFiles/3.16.3'
++ CMAKE_PLATFORM_INFO_INITIALIZED='1'
++ CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME='1'
++ CMAKE_PROJECT_DESCRIPTION=''
++ CMAKE_PROJECT_HOMEPAGE_URL=''
++ CMAKE_PROJECT_NAME='crypto'
++ CMAKE_PROJECT_VERSION='1.0.0'
++ CMAKE_PROJECT_VERSION_MAJOR='1'
++ CMAKE_PROJECT_VERSION_MINOR='0'
++ CMAKE_PROJECT_VERSION_PATCH='0'
++ CMAKE_PROJECT_VERSION_TWEAK=''
++ CMAKE_RANLIB='/usr/bin/ranlib'
++ CMAKE_RANLIB='/usr/bin/ranlib'
++ CMAKE_READELF='/usr/bin/readelf'
++ CMAKE_REQUIRED_DEFINITIONS=''
++ CMAKE_REQUIRED_FLAGS=''
++ CMAKE_ROOT='/usr/share/cmake-3.16'
++ CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS='-shared'
++ CMAKE_SHARED_LIBRARY_C_FLAGS='-fPIC'
++ CMAKE_SHARED_LIBRARY_LINK_C_FLAGS='-rdynamic'
++ CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS='-Wl,-Bdynamic'
++ CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS='-Wl,-Bstatic'
++ CMAKE_SHARED_LIBRARY_PREFIX='lib'
++ CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG='-Wl,-rpath-link,'
++ CMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN='$ORIGIN'
++ CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG='-Wl,-rpath,'
++ CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP=':'
++ CMAKE_SHARED_LIBRARY_SONAME_C_FLAG='-Wl,-soname,'
++ CMAKE_SHARED_LIBRARY_SUFFIX='.so'
++ CMAKE_SHARED_LINKER_FLAGS=''
++ CMAKE_SHARED_LINKER_FLAGS_DEBUG=''
++ CMAKE_SHARED_LINKER_FLAGS_INIT=' '
++ CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL=''
++ CMAKE_SHARED_LINKER_FLAGS_RELEASE=''
++ CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO=''
++ CMAKE_SHARED_MODULE_CREATE_C_FLAGS='-shared'
++ CMAKE_SHARED_MODULE_C_FLAGS='-fPIC'
++ CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS='-Wl,-Bdynamic'
++ CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS='-Wl,-Bstatic'
++ CMAKE_SHARED_MODULE_PREFIX='lib'
++ CMAKE_SHARED_MODULE_SUFFIX='.so'
++ CMAKE_SIZEOF_UNSIGNED_SHORT='2'
++ CMAKE_SIZEOF_UNSIGNED_SHORT_CODE='#define CMAKE_SIZEOF_UNSIGNED_SHORT 2'
++ CMAKE_SIZEOF_VOID_P='8'
++ CMAKE_SKIP_INSTALL_RPATH='NO'
++ CMAKE_SKIP_RPATH='NO'
++ CMAKE_SOURCE_DIR='/home/jake/sysgen/build/crypto'
++ CMAKE_STATIC_LIBRARY_PREFIX='lib'
++ CMAKE_STATIC_LIBRARY_SUFFIX='.a'
++ CMAKE_STATIC_LINKER_FLAGS=''
++ CMAKE_STATIC_LINKER_FLAGS_DEBUG=''
++ CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL=''
++ CMAKE_STATIC_LINKER_FLAGS_RELEASE=''
++ CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO=''
++ CMAKE_STRIP='/usr/bin/strip'
++ CMAKE_SYSTEM='Linux-5.8.0-63-generic'
++ CMAKE_SYSTEM_INCLUDE_PATH='/usr/include/X11'
++ CMAKE_SYSTEM_INFO_FILE='Platform/Linux'
++ CMAKE_SYSTEM_LIBRARY_PATH='/usr/lib/X11'
++ CMAKE_SYSTEM_LOADED='1'
++ CMAKE_SYSTEM_NAME='Linux'
++ CMAKE_SYSTEM_PREFIX_PATH='/usr/local;/usr;/;/usr;/usr/local;/usr/X11R6;/usr/pkg;/opt'
++ CMAKE_SYSTEM_PROCESSOR='x86_64'
++ CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED='1'
++ CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED='1'
++ CMAKE_SYSTEM_VERSION='5.8.0-63-generic'
++ CMAKE_TEST_ENDIANESS_STRINGS_BE=''
++ CMAKE_TEST_ENDIANESS_STRINGS_LE='THIS IS LITTLE ENDIAN.'
++ CMAKE_TWEAK_VERSION='0'
++ CMAKE_UNAME='/usr/bin/uname'
++ CMAKE_VERBOSE_MAKEFILE='FALSE'
++ CMAKE_VERSION='3.16.3'
++ CONFIG='Release'
++ CURRENT_LIST_FILE='CMakeLists.txt'
++ C_TEST_WAS_RUN='1'
++ DBGCHAR=''
++ EXTPKG_DESC='Simple AES/DES encryption and SHA1/SHA2 hashing library'
++ EXTPKG_NAME='crypto'
++ EXTPKG_VERS='1.0.0'
++ FIND_PACKAGE_MESSAGE_DETAILS_Git='[/usr/bin/git][v2.25.1()]'
++ FULLNAME='crypto64'
++ GIT_COMMIT_COUNT='49'
++ GIT_EXECUTABLE='/usr/bin/git'
++ GIT_FOUND='TRUE'
++ GIT_HASH7='837705e'
++ GIT_MODIFIED=''
++ GIT_VERSION_STRING='2.25.1'
++ Git_FOUND='TRUE'
++ HAVE_CMAKE_SIZEOF_UNSIGNED_SHORT='TRUE'
++ HAVE_IS_BIG_ENDIAN='TRUE'
++ HAVE_STDBOOL_H='1'
++ HAVE_STDDEF_H='1'
++ HAVE_STDINT_H='1'
++ HAVE_SYS_TYPES_H='1'
++ INSTALL_PREFIX='/home/jake/sysgen/build/hercpkgs'
++ IS_BIG_ENDIAN='0'
++ LIB_INSTALL_DIR='lib'
++ LIB_INSTALL_DIR='lib'
++ MACRO_CHECK_FUNCTION_DEFINITIONS='-DOK -m32'
++ MSVC_C_ARCHITECTURE_ID=''
++ PKG_C_FLAGS=' -D LITTLE_ENDIAN=1234 -D BIG_ENDIAN=4321 -D BYTE_ORDER=LITTLE_ENDIAN'
++ PRESET_CMAKE_SYSTEM_NAME='FALSE'
++ PROJECT_BINARY_DIR='/home/jake/sysgen/build/WORK/crypto/crypto64.Release'
++ PROJECT_DESCRIPTION='Simple AES/DES encryption and SHA1/SHA2 hashing library'
++ PROJECT_HOMEPAGE_URL=''
++ PROJECT_NAME='crypto'
++ PROJECT_SOURCE_DIR='/home/jake/sysgen/build/crypto'
++ PROJECT_VERSION='1.0.0'
++ PROJECT_VERSION_MAJOR='1'
++ PROJECT_VERSION_MINOR='0'
++ PROJECT_VERSION_PATCH='0'
++ PROJECT_VERSION_TWEAK=''
++ PUBLIC_HEADERS='crypto_version.h;include/crypto.h;include/rijndael.h;include/sha1.h;include/sha2.h;include/sshdes.h'
++ RUN_CONFIGURE='ON'
++ SAFE_CMAKE_REQUIRED_DEFINITIONS=''
++ SOURCE_DIR='/home/jake/sysgen/build/crypto'
++ SUFFIX='64'
++ TEMP_CMAKE_REQUIRED_FLAGS=''
++ TRUNCATED_BINARY_DIR='/home/jake/sysgen/build/WORK/crypto'
++ UNIX='1'
++ VERS_BUILD='49'
++ VERS_EXTRA='-g837705e'
++ VERS_INTER='0'
++ VERS_MAJOR='1'
++ VERS_MINOR='0'
++ VERS_STRING='1.0.0.49-g837705e'
++ crypto_BINARY_DIR='/home/jake/sysgen/build/WORK/crypto/crypto64.Release'
++ crypto_DESCRIPTION=''
++ crypto_HOMEPAGE_URL=''
++ crypto_SOURCE_DIR='/home/jake/sysgen/build/crypto'
++ crypto_SRCS='crypto_version.c;source/rijndael.c;source/sha1.c;source/sha2.c;source/sshdes.c'
++ crypto_VERSION='1.0.0'
++ crypto_VERSION_MAJOR='1'
++ crypto_VERSION_MINOR='0'
++ crypto_VERSION_PATCH='0'
++ crypto_VERSION_TWEAK=''
++ type=''
